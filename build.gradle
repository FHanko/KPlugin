plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.2.0"
    id 'org.jetbrains.kotlin.jvm' version '1.9.20-RC2'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("io.papermc.paperweight.userdev") version "1.5.5"
}

group = 'io.github.fhanko'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    paperweight.paperDevBundle("1.20.2-R0.1-SNAPSHOT")
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"
    compileOnly "dev.jorel:commandapi-bukkit-core:9.1.0"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

/*
tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}
*/

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20.2")
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(17)
}